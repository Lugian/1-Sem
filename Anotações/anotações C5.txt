For
for(inicialização; condição; incremento){
}	|			|
	comando de		|determina quando o loop termina
atribuição para estabe-
lecer a variavél de loop
-o comando só acaba quando o loop chegar no valor da condição-

pulando de 5 em 5
for(x = 1; x<100; x=x+5){
	printf("%d", x);
}

duas variavéis controlando o loop
x e y
for(x=0, y=0; x+y<100; ++x, y++){
	printf("%d", x+y);
}

programa que só funciona de acordo com a resposta
a condição pode ser aplicada de diversas formas
nesse caso, o programa só irá rodar se a resposta for
diferente de sim.
for(x=1; x<100 && resposta != 'sim';x++){
}

programa acaba de acordo com a resposta
irá ser rodado números que sejam diferentes de 123,
quando o número 123 for digitado, o programa se encerra.
for(x=0; x!=123;){
}

Algoritimo de troca (C)
n(vetor) a(auxiliar) 
 //para inverter podemos fazer n[i] <n[l]
	if (n[i] > n[j]){
	a =  n[i]; 
            	n[i] = n[j];
            	n[j] = a;
}

Algoritimo de classificação (C)
for (i = 0; i < 10; i++){
    	for (j = i + 1; j < 10; j++){
	}
}

Rand em intervalor
rand() % 100; (vai gerar números aleatórios entre 0 e 99)

Sistema de apenas número positivo
do{
	scanf("%d", &s[i]);
}while(s[i] < 0 && s[i] >100000);

MATRIZES
é um tipo de tabela, sendo informado primeiro a linha, depois a coluna
matriz[2][3]

_|  |_| duas linhas
_|_|_| três colunas

Armazenando valores de uma matriz
int matriz[2][2] = {10, 20, 30, 40} (2*2=4, 4 valores)

Mostrando os valores de uma matriz
matriz[2][2] = {10, 20, 30, 40}
printf("linha 0, coluna 0 = %d\n", m[0][0]);
printf("linha 0, coluna 1 = %d\n", m[0][1]);
printf("linha 1, coluna 0 = %d\n", m[1][0]);
printf("linha 1, coluna 1 = %d\n", m[1][1]);
**resposta
Valor da linha 0, coluna 0 = 10
Valor da linha 0, coluna 1 = 20
Valor da linha 1, coluna 0 = 30
Valor da linha 1, coluna 1 = 40

 	 0  1
     ______
   0 |10|20| duas linhas
   1 |30|40| duas colunas

Separando os valores da matriz por linhas
matriz[2][2] = {{10, 20}, {{30, 40}; 
ou
matriz[2][2] = {{10, 20},
		    {30, 40}};

Manipulando valor da matriz
int m[5][5]= {{1, 2, 3, 4, 5},
		  {6, 7, 8, 9, 10},
		  {11, 12, 13, 14, 15},
		  {16, 17, 18, 19, 20}
		  {21, 22, 23, 24, 25}};
for(i=0; i<5; i++){ (a variavél i será usada para as linhas)
	for(j=0; j<5; j++){ (a variavél j será usada para as colunas)
		printf("%d ", m[i][j]);
	}
}
**resposta
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25

exemplo (quero apenas os valores da coluna 0)
int m[2][2] = {{1, 2}, {{3, 4}; 
for(i=0; i<2; i++){ (isso significa que queremos o valor do primeiro número da linha 0(1) e 1(3))
	for(j=0; j<1; j++){ (isso significa que queremos apenas a coluna 1)
		printf("%d\n", m[i][j]);
	}
}
**resposta
1
3

Pedindo o valor da matriz
int m[2][2]; 
printf("Por favor indique os valores da matriz.\n");
for(i=0; i<2; i++){ 
	for(j=0; j<2; j++){ 
		printf("posição [%d, %d] ", i, j);
		scanf("%d", &m[i][j]);
	}
}

Maior número e menor da matriz
int menor = 26; (nesse caso a matriz é de números aleatórios de 0 a 25)
for(i=0;i<4;i++){
        for(j=0;j<4;j++){
           if(m[i][j]<menor){
            menor=m[i][j];
           }
           if(m[i][j]>maior){
            maior=m[i][j];
           }
        }

Maior número da matriz
	for(i=0;i<3;i++){
        for(j=0;j<3;j++){
           if (i == 0 && j == 0){
               ma=m[0][0];
           }
           if(m[i][j]>ma){
            ma=m[i][j];
           }
        }
	}

Posição do maior número da matriz
if(m[i][j]>ma){
	ma=m[i][j];
	pi = i;
	pj = j;
}







